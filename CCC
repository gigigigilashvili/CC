final
#include <stdio.h>

#include <math.h>

int main() {

    int k,z,i,c;

    float y;

for (i=0;i<7;i++)

{

    printf("\n შეიყვანე Z,K,C:  ");

    scanf("%d",&z);

    scanf("%d",&k);

    scanf("%d",&c);

if (k==z)

    {

        printf("skipped");

    continue;

    }

else if (k+z<10)

{

    switch (k%z)

        {

            case 0:y=pow(y,2);

                printf("nashti aris 0, Y= %f",y);

                    break;

            case 1:y=cos(cos(pow(k,2)));

                printf("nashti aris 1, Y= %f",y);

                    break;

            case 2:y=z;

                printf("nashti aris 2, Y= %f",y);

                    break;

        }

}

else if (k+z>c)

    {

        y=z;

        printf("Y=Z, Y=%f",y);

    }

else if (k+z==c)

    {

        y=sqrt(pow(k,5)+2*pow(z,3));

        printf("%f",y);

    }

}

    return 0;

}



11 12 13

21 22 23

31 32 33




#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main() {
    // Seed the random number generator
    srand(time(NULL));

    // Declare and initialize arrays
    int A[5][5];
    int B[5];

    // Fill array A with random values
    for (int i = 0; i < 5; i++) {
        for (int j = 0; j < 5; j++) {
            A[i][j] = rand() % 100; // Generating random values between 0 and 99
        }
    }

    // Print array A
    printf("Array A[5][5]:\n");
    for (int i = 0; i < 5; i++) {
        for (int j = 0; j < 5; j++) {
            printf("%3d ", A[i][j]);
        }
        printf("\n");
    }

    // Calculate the sum of elements on both diagonals
    int diagonalSum1 = 0;
    int diagonalSum2 = 0;
    for (int i = 0; i < 5; i++) {
        diagonalSum1 += A[i][i];
        diagonalSum2 += A[i][4 - i];
    }

    // Check if the sum is negative
    if (diagonalSum1 + diagonalSum2 < 0) {
        // Form array B with the sum of negative column elements
        for (int j = 0; j < 5; j++) {
            int columnSum = 0;
            for (int i = 0; i < 5; i++) {
                columnSum += A[i][j];
            }
            B[j] = columnSum;
        }

        // Print array B
        printf("\nArray B[5] (sum of negative column elements in A):\n");
        for (int i = 0; i < 5; i++) {
            printf("%3d ", B[i]);
        }
        printf("\n");
    } else {
        // Form array B with the maximum elements in each row of A
        for (int i = 0; i < 5; i++) {
            int maxElement = A[i][0];
            for (int j = 1; j < 5; j++) {
                if (A[i][j] > maxElement) {
                    maxElement = A[i][j];
                }
            }
            B[i] = maxElement;
        }

        // Print array B
        printf("\nArray B[5] (maximum elements in each row of A):\n");
        for (int i = 0; i < 5; i++) {
            printf("%3d ", B[i]);
        }
        printf("\n");
    }

    return 0;
}

